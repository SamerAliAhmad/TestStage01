# EditorConfig is awesome: https://EditorConfig.org

# top-most EditorConfig file
root = true

[*]
indent_style = space
indent_size = 4
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = false

# Code Style Rules
dotnet_diagnostic.IDE0001.severity = warning # Simplify name
dotnet_diagnostic.IDE0002.severity = warning # Simplify member access
dotnet_diagnostic.IDE0003.severity = warning # Remove this or Me qualification
dotnet_diagnostic.IDE0004.severity = warning # Remove unnecessary cast
dotnet_diagnostic.IDE0005.severity = warning # Remove unnecessary import
dotnet_diagnostic.IDE0007.severity = warning # Use var instead of explicit type
# dotnet_diagnostic.IDE0008.severity = warning # Use explicit type instead of var
# dotnet_diagnostic.IDE0009.severity = warning # Add this or Me qualification
# dotnet_diagnostic.IDE0010.severity = warning # Add missing cases to switch statement
dotnet_diagnostic.IDE0011.severity = warning # Add braces
dotnet_diagnostic.IDE0016.severity = warning # Use throw expression
dotnet_diagnostic.IDE0017.severity = warning # Use object initializers
# dotnet_diagnostic.IDE0018.severity = warning # Inline variable declaration
# dotnet_diagnostic.IDE0019.severity = warning # Use pattern matching to avoid as followed by a null check
# dotnet_diagnostic.IDE0020.severity = warning # Use pattern matching to avoid is check followed by a cast (with variable)
dotnet_diagnostic.IDE0021.severity = warning # Use expression body for constructors
dotnet_diagnostic.IDE0022.severity = warning # Use expression body for methods
dotnet_diagnostic.IDE0023.severity = warning # Use expression body for conversion operators
# dotnet_diagnostic.IDE0024.severity = warning # Use expression body for operators
# dotnet_diagnostic.IDE0025.severity = warning # Use expression body for properties
# dotnet_diagnostic.IDE0026.severity = warning # Use expression body for indexers
# dotnet_diagnostic.IDE0027.severity = warning # Use expression body for accessors
dotnet_diagnostic.IDE0028.severity = warning # Use collection initializers
dotnet_diagnostic.IDE0029.severity = warning # Null check can be simplified
dotnet_diagnostic.IDE0030.severity = warning # Null check can be simplified
dotnet_diagnostic.IDE0031.severity = warning # Use null propagation
# dotnet_diagnostic.IDE0032.severity = warning # Use auto property
dotnet_diagnostic.IDE0033.severity = warning # Use explicitly provided tuple name
dotnet_diagnostic.IDE0034.severity = warning # Simplify default expression
dotnet_diagnostic.IDE0035.severity = warning # Remove unreachable code
# dotnet_diagnostic.IDE0036.severity = warning # Order modifiers
# dotnet_diagnostic.IDE0037.severity = warning # Use inferred member name
# dotnet_diagnostic.IDE0038.severity = warning # Use pattern matching to avoid is check followed by a cast (without variable)
dotnet_diagnostic.IDE0039.severity = warning # Use local function instead of lambda
dotnet_diagnostic.IDE0040.severity = warning # Add accessibility modifiers
dotnet_diagnostic.IDE0041.severity = warning # Use is null check
dotnet_diagnostic.IDE0042.severity = warning # Deconstruct variable declaration
dotnet_diagnostic.IDE0044.severity = warning # Add readonly modifier
# dotnet_diagnostic.IDE0045.severity = warning # Use conditional expression for assignment
# dotnet_diagnostic.IDE0046.severity = warning # Use conditional expression for return
dotnet_diagnostic.IDE0047.severity = warning # Remove unnecessary parentheses
# dotnet_diagnostic.IDE0048.severity = warning # Add parentheses for clarity
dotnet_diagnostic.IDE0049.severity = warning # Use language keywords instead of framework type names for type references
# dotnet_diagnostic.IDE0050.severity = warning # Convert anonymous type to tuple
dotnet_diagnostic.IDE0051.severity = warning # Remove unused private member
dotnet_diagnostic.IDE0052.severity = warning # Remove unread private member
# dotnet_diagnostic.IDE0053.severity = warning # Use expression body for lambdas
dotnet_diagnostic.IDE0054.severity = warning # Use compound assignment
dotnet_diagnostic.IDE0055.severity = warning # Fix formatting
# dotnet_diagnostic.IDE0056.severity = warning # Use index operator
dotnet_diagnostic.IDE0057.severity = warning # Use range operator
# dotnet_diagnostic.IDE0058.severity = warning # Remove unused expression value
dotnet_diagnostic.IDE0059.severity = warning # Remove unnecessary value assignment
dotnet_diagnostic.IDE0060.severity = warning # Remove unused parameter
# dotnet_diagnostic.IDE0061.severity = warning # Use expression body for local functions
# dotnet_diagnostic.IDE0062.severity = warning # Make local function static
dotnet_diagnostic.IDE0063.severity = warning # Use simple using statement
# dotnet_diagnostic.IDE0064.severity = warning # Make struct fields writable
# dotnet_diagnostic.IDE0065.severity = warning # using directive placement
dotnet_diagnostic.IDE0066.severity = warning # Use switch expression
# dotnet_diagnostic.IDE0070.severity = warning # Use System.HashCode.Combine
dotnet_diagnostic.IDE0071.severity = warning # Simplify interpolation
# dotnet_diagnostic.IDE0072.severity = warning # Add missing cases to switch expression
# dotnet_diagnostic.IDE0073.severity = warning # Use file header
dotnet_diagnostic.IDE0074.severity = warning # Use coalesce compound assignment
dotnet_diagnostic.IDE0075.severity = warning # Simplify conditional expression
dotnet_diagnostic.IDE0076.severity = warning # Remove invalid global SuppressMessageAttribute
# dotnet_diagnostic.IDE0077.severity = warning # Avoid legacy format target in global SuppressMessageAttribute
# dotnet_diagnostic.IDE0078.severity = warning # Use pattern matching
dotnet_diagnostic.IDE0079.severity = warning # Remove unnecessary suppression
dotnet_diagnostic.IDE0080.severity = warning # Remove unnecessary suppression operator
dotnet_diagnostic.IDE0081.severity = warning # Remove ByVal
# dotnet_diagnostic.IDE0082.severity = warning # Convert typeof to nameof
# dotnet_diagnostic.IDE0083.severity = warning # Use pattern matching (not operator)
# dotnet_diagnostic.IDE0084.severity = warning # Use pattern matching (IsNot operator)
dotnet_diagnostic.IDE0090.severity = warning # Simplify new expression
dotnet_diagnostic.IDE0100.severity = warning # Remove unnecessary equality operator
dotnet_diagnostic.IDE0110.severity = warning # Remove unnecessary discard
dotnet_diagnostic.IDE0120.severity = warning # Simplify LINQ expression
# dotnet_diagnostic.IDE0130.severity = warning # Namespace does not match folder structure
dotnet_diagnostic.IDE0140.severity = warning # Simplify object creation
dotnet_diagnostic.IDE0150.severity = warning # Prefer null check over type check
# dotnet_diagnostic.IDE0160.severity = warning # Use block-scoped namespace
dotnet_diagnostic.IDE0161.severity = warning # Use file-scoped namespace
dotnet_diagnostic.IDE0170.severity = warning # Simplify property pattern
# dotnet_diagnostic.IDE0180.severity = warning # Use tuple to swap values
dotnet_diagnostic.IDE0200.severity = warning # Remove unnecessary lambda expression
# dotnet_diagnostic.IDE0210.severity = warning # Convert to top-level statements
# dotnet_diagnostic.IDE0211.severity = warning # Convert to 'Program.Main' style program
dotnet_diagnostic.IDE0220.severity = warning # Add explicit cast in foreach loop
# dotnet_diagnostic.IDE0230.severity = warning # Use UTF-8 string literal
dotnet_diagnostic.IDE0240.severity = warning # Nullable directive is redundant
dotnet_diagnostic.IDE0241.severity = warning # Nullable directive is unnecessary
# dotnet_diagnostic.IDE0250.severity = warning # Struct can be made 'readonly'
# dotnet_diagnostic.IDE0251.severity = warning # Member can be made 'readonly'
# dotnet_diagnostic.IDE0260.severity = warning # Use pattern matching
dotnet_diagnostic.IDE0270.severity = warning # Null check can be simplified
dotnet_diagnostic.IDE0280.severity = warning # Use nameof
# dotnet_diagnostic.IDE0290.severity = warning # Use primary constructor
dotnet_diagnostic.IDE0300.severity = warning # Use collection expression for array
dotnet_diagnostic.IDE0301.severity = warning # Use collection expression for empty
dotnet_diagnostic.IDE0302.severity = warning # Use collection expression for stackalloc
dotnet_diagnostic.IDE0303.severity = warning # Use collection expression for Create()
dotnet_diagnostic.IDE0304.severity = warning # Use collection expression for builder
dotnet_diagnostic.IDE0305.severity = warning # Use collection expression for fluent

dotnet_diagnostic.IDE1005.severity = warning # Use conditional delegate call
dotnet_diagnostic.IDE1006.severity = warning # Naming styles
dotnet_diagnostic.IDE0300.severity = warning # Collection initialization can be simplified

# Code Analysis Rules
# dotnet_diagnostic.CA1000.severity = warning # Do not declare static members on generic types
dotnet_diagnostic.CA1001.severity = warning # Types that own disposable fields should be disposable
# dotnet_diagnostic.CA1002.severity = warning # Do not expose generic lists
# dotnet_diagnostic.CA1003.severity = warning # Use generic event handler instances
# dotnet_diagnostic.CA1005.severity = warning # Avoid excessive parameters on generic types
# dotnet_diagnostic.CA1008.severity = warning # Enums should have zero value
# dotnet_diagnostic.CA1010.severity = warning # Collections should implement generic interface
# dotnet_diagnostic.CA1012.severity = warning # Abstract types should not have constructors
# dotnet_diagnostic.CA1014.severity = warning # Mark assemblies with CLSCompliantAttribute
# dotnet_diagnostic.CA1016.severity = warning # Mark assemblies with AssemblyVersionAttribute
# dotnet_diagnostic.CA1017.severity = warning # Mark assemblies with ComVisibleAttribute
# dotnet_diagnostic.CA1018.severity = warning # Mark attributes with AttributeUsageAttribute
# dotnet_diagnostic.CA1019.severity = warning # Define accessors for attribute arguments
# dotnet_diagnostic.CA1021.severity = warning # Avoid out parameters
# dotnet_diagnostic.CA1024.severity = warning # Use properties where appropriate
# dotnet_diagnostic.CA1027.severity = warning # Mark enums with FlagsAttribute
# dotnet_diagnostic.CA1028.severity = warning # Enum storage should be Int32
# dotnet_diagnostic.CA1030.severity = warning # Use events where appropriate
# dotnet_diagnostic.CA1031.severity = warning # Do not catch general exception types
# dotnet_diagnostic.CA1032.severity = warning # Implement standard exception constructors
# dotnet_diagnostic.CA1033.severity = warning # Interface methods should be callable by child types
# dotnet_diagnostic.CA1034.severity = warning # Nested types should not be visible
# dotnet_diagnostic.CA1036.severity = warning # Override methods on comparable types
# dotnet_diagnostic.CA1040.severity = warning # Avoid empty interfaces
# dotnet_diagnostic.CA1041.severity = warning # Provide ObsoleteAttribute message
# dotnet_diagnostic.CA1043.severity = warning # Use integral or string argument for indexers
# dotnet_diagnostic.CA1044.severity = warning # Properties should not be write only
# dotnet_diagnostic.CA1045.severity = warning # Do not pass types by reference
# dotnet_diagnostic.CA1046.severity = warning # Do not overload operator equals on reference types
# dotnet_diagnostic.CA1047.severity = warning # Do not declare protected members in sealed types
dotnet_diagnostic.CA1050.severity = warning # Declare types in namespaces
# dotnet_diagnostic.CA1051.severity = warning # Do not declare visible instance fields
# dotnet_diagnostic.CA1052.severity = warning # Static holder types should be sealed
# dotnet_diagnostic.CA1053.severity = warning # Static holder types should not have constructors
# dotnet_diagnostic.CA1054.severity = warning # URI parameters should not be strings
# dotnet_diagnostic.CA1055.severity = warning # URI return values should not be strings
# dotnet_diagnostic.CA1056.severity = warning # URI properties should not be strings
# dotnet_diagnostic.CA1058.severity = warning # Types should not extend certain base types
dotnet_diagnostic.CA1060.severity = warning # Move P/Invokes to NativeMethods class
# dotnet_diagnostic.CA1061.severity = warning # Do not hide base class methods
# dotnet_diagnostic.CA1062.severity = warning # Validate arguments of public methods
dotnet_diagnostic.CA1063.severity = warning # Implement IDisposable correctly
dotnet_diagnostic.CA1064.severity = warning # Exceptions should be public
# dotnet_diagnostic.CA1065.severity = warning # Do not raise exceptions in unexpected locations
# dotnet_diagnostic.CA1066.severity = warning # Implement IEquatable when overriding Equals
# dotnet_diagnostic.CA1067.severity = warning # Override Equals when implementing IEquatable
# dotnet_diagnostic.CA1068.severity = warning # CancellationToken parameters must come last
dotnet_diagnostic.CA1069.severity = warning # Enums should not have duplicate values
# dotnet_diagnostic.CA1070.severity = warning # Do not declare event fields as virtual
# dotnet_diagnostic.CA1200.severity = warning # Avoid using cref tags with a prefix
# dotnet_diagnostic.CA1303.severity = warning # Do not pass literals as localized parameters
# dotnet_diagnostic.CA1304.severity = warning # Specify CultureInfo
# dotnet_diagnostic.CA1305.severity = warning # Specify IFormatProvider
# dotnet_diagnostic.CA1307.severity = warning # Specify StringComparison for clarity
# dotnet_diagnostic.CA1308.severity = warning # Normalize strings to uppercase
# dotnet_diagnostic.CA1309.severity = warning # Use ordinal StringComparison
# dotnet_diagnostic.CA1310.severity = warning # Specify StringComparison for correctness
# dotnet_diagnostic.CA1311.severity = warning # Specify a culture or use an invariant version
# dotnet_diagnostic.CA1401.severity = warning # P/Invokes should not be visible
dotnet_diagnostic.CA1416.severity = warning # Validate platform compatibility
# dotnet_diagnostic.CA1417.severity = warning # Do not use OutAttribute on string parameters for P/Invokes
# dotnet_diagnostic.CA1418.severity = warning # Use valid platform string
# dotnet_diagnostic.CA1419.severity = warning # Provide a parameterless constructor that is as visible as the containing type for concrete types derived from 'System.Runtime.InteropServices.SafeHandle'
# dotnet_diagnostic.CA1420.severity = warning # Property, type, or attribute requires runtime marshalling
# dotnet_diagnostic.CA1421.severity = warning # Method uses runtime marshalling when DisableRuntimeMarshallingAttribute is applied
# dotnet_diagnostic.CA1422.severity = warning # Validate platform compatibility
# dotnet_diagnostic.CA1501.severity = warning # Avoid excessive inheritance
# dotnet_diagnostic.CA1502.severity = warning # Avoid excessive complexity
dotnet_diagnostic.CA1505.severity = warning # Avoid unmaintainable code
# dotnet_diagnostic.CA1506.severity = warning # Avoid excessive class coupling
# dotnet_diagnostic.CA1507.severity = warning # Use nameof in place of string
dotnet_diagnostic.CA1508.severity = warning # Avoid dead conditional code
# dotnet_diagnostic.CA1509.severity = warning # Invalid entry in code metrics configuration file
dotnet_diagnostic.CA1510.severity = warning # Use 'ArgumentNullException.ThrowIfNull' instead of explicitly throwing a new exception instance
dotnet_diagnostic.CA1511.severity = warning # Use ArgumentException throw helper
dotnet_diagnostic.CA1512.severity = warning # Use ArgumentOutOfRangeException throw helper
dotnet_diagnostic.CA1513.severity = warning # Use ObjectDisposedException throw helper
dotnet_diagnostic.CA1514.severity = warning # Avoid redundant length argument
dotnet_diagnostic.CA1515.severity = warning # Consider making public types internal
# dotnet_diagnostic.CA1700.severity = warning # Do not name enum values 'Reserved'
# dotnet_diagnostic.CA1707.severity = warning # Identifiers should not contain underscores
# dotnet_diagnostic.CA1708.severity = warning # Identifiers should differ by more than case
# dotnet_diagnostic.CA1710.severity = warning # Identifiers should have correct suffix
# dotnet_diagnostic.CA1711.severity = warning # Identifiers should not have incorrect suffix
# dotnet_diagnostic.CA1712.severity = warning # Do not prefix enum values with type name
# dotnet_diagnostic.CA1713.severity = warning # Events should not have before or after prefix
# dotnet_diagnostic.CA1714.severity = warning # Flags enums should have plural names
# dotnet_diagnostic.CA1715.severity = warning # Identifiers should have correct prefix
# dotnet_diagnostic.CA1716.severity = warning # Identifiers should not match keywords
# dotnet_diagnostic.CA1717.severity = warning # Only FlagsAttribute enums should have plural names
# dotnet_diagnostic.CA1720.severity = warning # Identifiers should not contain type names
# dotnet_diagnostic.CA1721.severity = warning # Property names should not match get methods
# dotnet_diagnostic.CA1724.severity = warning # Type Names Should Not Match Namespaces
# dotnet_diagnostic.CA1725.severity = warning # Parameter names should match base declaration
# dotnet_diagnostic.CA1727.severity = warning # Use PascalCase for named placeholders
dotnet_diagnostic.CA1801.severity = warning # Review unused parameters
# dotnet_diagnostic.CA1802.severity = warning # Use Literals Where Appropriate
dotnet_diagnostic.CA1805.severity = warning # Do not initialize unnecessarily
dotnet_diagnostic.CA1806.severity = warning # Do not ignore method results
dotnet_diagnostic.CA1810.severity = warning # Initialize reference type static fields inline
# dotnet_diagnostic.CA1812.severity = warning # Avoid uninstantiated internal classes
# dotnet_diagnostic.CA1813.severity = warning # Avoid unsealed attributes
dotnet_diagnostic.CA1814.severity = warning # Prefer jagged arrays over multidimensional
# dotnet_diagnostic.CA1815.severity = warning # Override equals and operator equals on value types
dotnet_diagnostic.CA1816.severity = warning # Call GC.SuppressFinalize correctly
# dotnet_diagnostic.CA1819.severity = warning # Properties should not return arrays
# dotnet_diagnostic.CA1820.severity = warning # Test for empty strings using string length
dotnet_diagnostic.CA1821.severity = warning # Remove empty finalizers
dotnet_diagnostic.CA1822.severity = warning # Mark members as static
dotnet_diagnostic.CA1823.severity = warning # Avoid unused private fields
# dotnet_diagnostic.CA1824.severity = warning # Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1825.severity = warning # Avoid zero-length array allocations
# dotnet_diagnostic.CA1826.severity = warning # Use property instead of Linq Enumerable method
# dotnet_diagnostic.CA1827.severity = warning # Do not use Count/LongCount when Any can be used
# dotnet_diagnostic.CA1828.severity = warning # Do not use CountAsync/LongCountAsync when AnyAsync can be used
dotnet_diagnostic.CA1829.severity = warning # Use Length/Count property instead of Enumerable.Count method
dotnet_diagnostic.CA1830.severity = warning # Prefer strongly-typed Append and Insert method overloads on StringBuilder
# dotnet_diagnostic.CA1831.severity = warning # Use AsSpan instead of Range-based indexers for string when appropriate
# dotnet_diagnostic.CA1832.severity = warning # Use AsSpan or AsMemory instead of Range-based indexers for getting ReadOnlySpan or ReadOnlyMemory portion of an array
# dotnet_diagnostic.CA1833.severity = warning # Use AsSpan or AsMemory instead of Range-based indexers for getting Span or Memory portion of an array
# dotnet_diagnostic.CA1834.severity = warning # Use StringBuilder.Append(char) for single character strings
dotnet_diagnostic.CA1835.severity = warning # Prefer the 'Memory'-based overloads for 'ReadAsync' and 'WriteAsync'
dotnet_diagnostic.CA1836.severity = warning # Prefer IsEmpty over Count when available
# dotnet_diagnostic.CA1837.severity = warning # Use Environment.ProcessId instead of Process.GetCurrentProcess().Id
# dotnet_diagnostic.CA1838.severity = warning # Avoid StringBuilder parameters for P/Invokes
# dotnet_diagnostic.CA1839.severity = warning # Use Environment.ProcessPath instead of Process.GetCurrentProcess().MainModule.FileName
dotnet_diagnostic.CA1840.severity = warning # Use Environment.CurrentManagedThreadId instead of Thread.CurrentThread.ManagedThreadId
dotnet_diagnostic.CA1841.severity = warning # Prefer Dictionary Contains methods
dotnet_diagnostic.CA1842.severity = warning # Do not use 'WhenAll' with a single task
dotnet_diagnostic.CA1843.severity = warning # Do not use 'WaitAll' with a single task
# dotnet_diagnostic.CA1844.severity = warning # Provide memory-based overrides of async methods when subclassing 'Stream'
# dotnet_diagnostic.CA1845.severity = warning # Use span-based 'string.Concat'
dotnet_diagnostic.CA1846.severity = warning # Prefer AsSpan over Substring
dotnet_diagnostic.CA1847.severity = warning # Use char literal for a single character lookup
# dotnet_diagnostic.CA1848.severity = warning # Use the LoggerMessage delegates
# dotnet_diagnostic.CA1849.severity = warning # Call async methods when in an async method
dotnet_diagnostic.CA1850.severity = warning # Prefer static HashData method over ComputeHash
dotnet_diagnostic.CA1851.severity = warning # Possible multiple enumerations of IEnumerable collection
# dotnet_diagnostic.CA1852.severity = warning # Seal internal types
dotnet_diagnostic.CA1853.severity = warning # Unnecessary call to 'Dictionary.ContainsKey(key)'
dotnet_diagnostic.CA1854.severity = warning # Prefer the 'IDictionary.TryGetValue(TKey, out TValue)' method
# dotnet_diagnostic.CA1855.severity = warning # Use Span<T>.Clear() instead of Span<T>.Fill()
dotnet_diagnostic.CA1856.severity = warning # Incorrect usage of ConstantExpected attribute
dotnet_diagnostic.CA1857.severity = warning # The parameter expects a constant for optimal performance
# dotnet_diagnostic.CA1858.severity = warning # Use StartsWith instead of IndexOf
# dotnet_diagnostic.CA1859.severity = warning # Use concrete types when possible for improved performance
dotnet_diagnostic.CA1860.severity = warning # Avoid using 'Enumerable.Any()' extension method
dotnet_diagnostic.CA1861.severity = warning # Avoid constant arrays as arguments
dotnet_diagnostic.CA1862.severity = warning # Use the 'StringComparison' method overloads to perform case-insensitive string comparisons
# dotnet_diagnostic.CA1863.severity = warning # Use 'CompositeFormat'
dotnet_diagnostic.CA1864.severity = warning # Prefer the 'IDictionary.TryAdd(TKey, TValue)' method
dotnet_diagnostic.CA1865.severity = warning # Use char overload
dotnet_diagnostic.CA1866.severity = warning # Use char overload
dotnet_diagnostic.CA1867.severity = warning # Use char overload
dotnet_diagnostic.CA1868.severity = warning # Unnecessary call to 'Contains' for sets
dotnet_diagnostic.CA1869.severity = warning # Cache and reuse 'JsonSerializerOptions' instances
dotnet_diagnostic.CA1870.severity = warning # Use a cached 'SearchValues' instance
dotnet_diagnostic.CA2000.severity = warning # Dispose objects before losing scope
dotnet_diagnostic.CA2002.severity = warning # Do not lock on objects with weak identity
# dotnet_diagnostic.CA2007.severity = warning # Do not directly await a Task
# dotnet_diagnostic.CA2008.severity = warning # Do not create tasks without passing a TaskScheduler
# dotnet_diagnostic.CA2009.severity = warning # Do not call ToImmutableCollection on an ImmutableCollection value
# dotnet_diagnostic.CA2011.severity = warning # Do not assign property within its setter
dotnet_diagnostic.CA2012.severity = warning # Use ValueTasks correctly
# dotnet_diagnostic.CA2013.severity = warning # Do not use ReferenceEquals with value types
# dotnet_diagnostic.CA2014.severity = warning # Do not use stackalloc in loops.
# dotnet_diagnostic.CA2015.severity = warning # Do not define finalizers for types derived from MemoryManager<T>
dotnet_diagnostic.CA2016.severity = warning # Forward the CancellationToken parameter to methods that take one
# dotnet_diagnostic.CA2017.severity = warning # Parameter count mismatch
# dotnet_diagnostic.CA2018.severity = warning # The count argument to Buffer.BlockCopy should specify the number of bytes to copy
# dotnet_diagnostic.CA2019.severity = warning # ThreadStatic fields should not use inline initialization
# dotnet_diagnostic.CA2020.severity = warning # Prevent behavioral change caused by built-in operators of IntPtr/UIntPtr
dotnet_diagnostic.CA2021.severity = warning # Don't call Enumerable.Cast<T> or Enumerable.OfType<T> with incompatible types
dotnet_diagnostic.CA2100.severity = warning # Review SQL queries for security vulnerabilities
# dotnet_diagnostic.CA2101.severity = warning # Specify marshalling for P/Invoke string arguments
# dotnet_diagnostic.CA2109.severity = warning # Review visible event handlers
# dotnet_diagnostic.CA2119.severity = warning # Seal methods that satisfy private interfaces
# dotnet_diagnostic.CA2153.severity = warning # Avoid handling Corrupted State Exceptions
# dotnet_diagnostic.CA2200.severity = warning # Rethrow to preserve stack details
# dotnet_diagnostic.CA2201.severity = warning # Do not raise reserved exception types
# dotnet_diagnostic.CA2207.severity = warning # Initialize value type static fields inline
# dotnet_diagnostic.CA2208.severity = warning # Instantiate argument exceptions correctly
dotnet_diagnostic.CA2211.severity = warning # Non-constant fields should not be visible
# dotnet_diagnostic.CA2213.severity = warning # Disposable fields should be disposed
# dotnet_diagnostic.CA2214.severity = warning # Do not call overridable methods in constructors
# dotnet_diagnostic.CA2215.severity = warning # Dispose methods should call base class dispose
# dotnet_diagnostic.CA2216.severity = warning # Disposable types should declare finalizer
# dotnet_diagnostic.CA2217.severity = warning # Do not mark enums with FlagsAttribute
# dotnet_diagnostic.CA2218.severity = warning # Override GetHashCode on overriding Equals
# dotnet_diagnostic.CA2219.severity = warning # Do not raise exceptions in exception clauses
# dotnet_diagnostic.CA2224.severity = warning # Override equals on overloading operator equals
# dotnet_diagnostic.CA2225.severity = warning # Operator overloads have named alternates
# dotnet_diagnostic.CA2226.severity = warning # Operators should have symmetrical overloads
# dotnet_diagnostic.CA2227.severity = warning # Collection properties should be read only
# dotnet_diagnostic.CA2229.severity = warning # Implement serialization constructors
# dotnet_diagnostic.CA2231.severity = warning # Overload operator equals on overriding ValueType.Equals
# dotnet_diagnostic.CA2234.severity = warning # Pass System.Uri objects instead of strings
# dotnet_diagnostic.CA2235.severity = warning # Mark all non-serializable fields
# dotnet_diagnostic.CA2237.severity = warning # Mark ISerializable types with SerializableAttribute
# dotnet_diagnostic.CA2241.severity = warning # Provide correct arguments to formatting methods
dotnet_diagnostic.CA2242.severity = warning # Test for NaN correctly
dotnet_diagnostic.CA2243.severity = warning # Attribute string literals should parse correctly
# dotnet_diagnostic.CA2244.severity = warning # Do not duplicate indexed element initializations
# dotnet_diagnostic.CA2245.severity = warning # Do not assign a property to itself
# dotnet_diagnostic.CA2246.severity = warning # Do not assign a symbol and its member in the same statement
# dotnet_diagnostic.CA2247.severity = warning # Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum.
dotnet_diagnostic.CA2248.severity = warning # Provide correct enum argument to Enum.HasFlag
# dotnet_diagnostic.CA2249.severity = warning # Consider using String.Contains instead of String.IndexOf
dotnet_diagnostic.CA2250.severity = warning # Use ThrowIfCancellationRequested
dotnet_diagnostic.CA2251.severity = warning # Use String.Equals over String.Compare
# dotnet_diagnostic.CA2252.severity = warning # Opt in to preview features
# dotnet_diagnostic.CA2253.severity = warning # Named placeholders should not be numeric values
dotnet_diagnostic.CA2254.severity = warning # Template should be a static expression
# dotnet_diagnostic.CA2255.severity = warning # The ModuleInitializer attribute should not be used in libraries
# dotnet_diagnostic.CA2256.severity = warning # All members declared in parent interfaces must have an implementation in a DynamicInterfaceCastableImplementation-attributed interface
# dotnet_diagnostic.CA2257.severity = warning # Members defined on an interface with 'DynamicInterfaceCastableImplementationAttribute' should be 'static'
# dotnet_diagnostic.CA2258.severity = warning # Providing a 'DynamicInterfaceCastableImplementation' interface in Visual Basic is unsupported
# dotnet_diagnostic.CA2259.severity = warning # Ensure ThreadStatic is only used with static fields
dotnet_diagnostic.CA2260.severity = warning # Implement generic math interfaces correctly
dotnet_diagnostic.CA2261.severity = warning # Do not use ConfigureAwaitOptions.SuppressThrowing with Task<TResult>
# dotnet_diagnostic.CA2300.severity = warning # Do not use insecure deserializer BinaryFormatter
# dotnet_diagnostic.CA2301.severity = warning # Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder
# dotnet_diagnostic.CA2302.severity = warning # Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize
# dotnet_diagnostic.CA2305.severity = warning # Do not use insecure deserializer LosFormatter
# dotnet_diagnostic.CA2310.severity = warning # Do not use insecure deserializer NetDataContractSerializer
# dotnet_diagnostic.CA2311.severity = warning # Do not deserialize without first setting NetDataContractSerializer.Binder
# dotnet_diagnostic.CA2312.severity = warning # Ensure NetDataContractSerializer.Binder is set before deserializing
# dotnet_diagnostic.CA2315.severity = warning # Do not use insecure deserializer ObjectStateFormatter
# dotnet_diagnostic.CA2321.severity = warning # Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver
# dotnet_diagnostic.CA2322.severity = warning # Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing
# dotnet_diagnostic.CA2326.severity = warning # Do not use TypeNameHandling values other than None
# dotnet_diagnostic.CA2327.severity = warning # Do not use insecure JsonSerializerSettings
# dotnet_diagnostic.CA2328.severity = warning # Ensure that JsonSerializerSettings are secure
# dotnet_diagnostic.CA2329.severity = warning # Do not deserialize with JsonSerializer using an insecure configuration
# dotnet_diagnostic.CA2330.severity = warning # Ensure that JsonSerializer has a secure configuration when deserializing
# dotnet_diagnostic.CA2350.severity = warning # Ensure DataTable.ReadXml()'s input is trusted
# dotnet_diagnostic.CA2351.severity = warning # Ensure DataSet.ReadXml()'s input is trusted
# dotnet_diagnostic.CA2352.severity = warning # Unsafe DataSet or DataTable in serializable type can be vulnerable to remote code execution attacks
# dotnet_diagnostic.CA2353.severity = warning # Unsafe DataSet or DataTable in serializable type
# dotnet_diagnostic.CA2354.severity = warning # Unsafe DataSet or DataTable in deserialized object graph can be vulnerable to remote code execution attack
# dotnet_diagnostic.CA2355.severity = warning # Unsafe DataSet or DataTable in deserialized object graph
# dotnet_diagnostic.CA2356.severity = warning # Unsafe DataSet or DataTable in web deserialized object graph
# dotnet_diagnostic.CA2361.severity = warning # Ensure autogenerated class containing DataSet.ReadXml() is not used with untrusted data
# dotnet_diagnostic.CA2362.severity = warning # Unsafe DataSet or DataTable in autogenerated serializable type can be vulnerable to remote code execution attacks
dotnet_diagnostic.CA3001.severity = warning # Review code for SQL injection vulnerabilities
dotnet_diagnostic.CA3002.severity = warning # Review code for XSS vulnerabilities
dotnet_diagnostic.CA3003.severity = warning # Review code for file path injection vulnerabilities
dotnet_diagnostic.CA3004.severity = warning # Review code for information disclosure vulnerabilities
dotnet_diagnostic.CA3005.severity = warning # Review code for LDAP injection vulnerabilities
dotnet_diagnostic.CA3006.severity = warning # Review code for process command injection vulnerabilities
dotnet_diagnostic.CA3007.severity = warning # Review code for open redirect vulnerabilities
dotnet_diagnostic.CA3008.severity = warning # Review code for XPath injection vulnerabilities
dotnet_diagnostic.CA3009.severity = warning # Review code for XML injection vulnerabilities
dotnet_diagnostic.CA3010.severity = warning # Review code for XAML injection vulnerabilities
dotnet_diagnostic.CA3011.severity = warning # Review code for DLL injection vulnerabilities
dotnet_diagnostic.CA3012.severity = warning # Review code for regex injection vulnerabilities
dotnet_diagnostic.CA3061.severity = warning # Do not add schema by URL
dotnet_diagnostic.CA3075.severity = warning # Insecure DTD Processing
dotnet_diagnostic.CA3076.severity = warning # Insecure XSLT Script Execution
dotnet_diagnostic.CA3077.severity = warning # Insecure Processing in API Design, XML Document and XML Text Reader
dotnet_diagnostic.CA3147.severity = warning # Mark verb handlers with ValidateAntiForgeryToken
dotnet_diagnostic.CA5350.severity = warning # Do Not Use Weak Cryptographic Algorithms
dotnet_diagnostic.CA5351.severity = warning # Do Not Use Broken Cryptographic Algorithms
dotnet_diagnostic.CA5358.severity = warning # Do Not Use Unsafe Cipher Modes
dotnet_diagnostic.CA5359.severity = warning # Do not disable certificate validation
dotnet_diagnostic.CA5360.severity = warning # Do not call dangerous methods in deserialization
dotnet_diagnostic.CA5361.severity = warning # Do not disable Schannel use of strong crypto
dotnet_diagnostic.CA5362.severity = warning # Potential reference cycle in deserialized object graph
dotnet_diagnostic.CA5363.severity = warning # Do not disable request validation
dotnet_diagnostic.CA5364.severity = warning # Do not use deprecated security protocols
dotnet_diagnostic.CA5365.severity = warning # Do Not Disable HTTP Header Checking
dotnet_diagnostic.CA5366.severity = warning # Use XmlReader For DataSet Read XML
dotnet_diagnostic.CA5367.severity = warning # Do Not Serialize Types With Pointer Fields
dotnet_diagnostic.CA5368.severity = warning # Set ViewStateUserKey For Classes Derived From Page
dotnet_diagnostic.CA5369.severity = warning # Use XmlReader for Deserialize
dotnet_diagnostic.CA5370.severity = warning # Use XmlReader for validating reader
dotnet_diagnostic.CA5371.severity = warning # Use XmlReader for schema read
dotnet_diagnostic.CA5372.severity = warning # Use XmlReader for XPathDocument
dotnet_diagnostic.CA5373.severity = warning # Do not use obsolete key derivation function
dotnet_diagnostic.CA5374.severity = warning # Do Not Use XslTransform
dotnet_diagnostic.CA5375.severity = warning # Do not use account shared access signature
dotnet_diagnostic.CA5376.severity = warning # Use SharedAccessProtocol HttpsOnly
dotnet_diagnostic.CA5377.severity = warning # Use container level access policy
dotnet_diagnostic.CA5378.severity = warning # Do not disable ServicePointManagerSecurityProtocols
dotnet_diagnostic.CA5379.severity = warning # Do not use weak key derivation function algorithm
dotnet_diagnostic.CA5380.severity = warning # Do not add certificates to root store
dotnet_diagnostic.CA5381.severity = warning # Ensure certificates are not added to root store
dotnet_diagnostic.CA5382.severity = warning # Use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5383.severity = warning # Ensure use secure cookies in ASP.NET Core
dotnet_diagnostic.CA5384.severity = warning # Do not use digital signature algorithm (DSA)
dotnet_diagnostic.CA5385.severity = warning # Use Rivest-Shamir-Adleman (RSA) algorithm with sufficient key size
dotnet_diagnostic.CA5386.severity = warning # Avoid hardcoding SecurityProtocolType value
dotnet_diagnostic.CA5387.severity = warning # Do not use weak key derivation function with insufficient iteration count
dotnet_diagnostic.CA5388.severity = warning # Ensure sufficient iteration count when using weak key derivation function
dotnet_diagnostic.CA5389.severity = warning # Do not add archive item's path to the target file system path
dotnet_diagnostic.CA5390.severity = warning # Do not hard-code encryption key
dotnet_diagnostic.CA5391.severity = warning # Use antiforgery tokens in ASP.NET Core MVC controllers
dotnet_diagnostic.CA5392.severity = warning # Use DefaultDllImportSearchPaths attribute for P/Invokes
dotnet_diagnostic.CA5393.severity = warning # Do not use unsafe DllImportSearchPath value
dotnet_diagnostic.CA5394.severity = warning # Do not use insecure randomness
dotnet_diagnostic.CA5395.severity = warning # Miss HttpVerb attribute for action methods
dotnet_diagnostic.CA5396.severity = warning # Set HttpOnly to true for HttpCookie
dotnet_diagnostic.CA5397.severity = warning # Do not use deprecated SslProtocols values
dotnet_diagnostic.CA5398.severity = warning # Avoid hardcoded SslProtocols values
dotnet_diagnostic.CA5399.severity = warning # Definitely disable HttpClient certificate revocation list check
dotnet_diagnostic.CA5400.severity = warning # Ensure HttpClient certificate revocation list check is not disabled
# dotnet_diagnostic.CA5401.severity = warning # Do not use CreateEncryptor with non-default IV
dotnet_diagnostic.CA5402.severity = warning # Use CreateEncryptor with the default IV
dotnet_diagnostic.CA5403.severity = warning # Do not hard-code certificate
# dotnet_diagnostic.CA5404.severity = warning # Do not disable token validation checks
dotnet_diagnostic.CA5405.severity = warning # Do not always skip token validation in delegates
# dotnet_diagnostic.IL3000.severity = warning # Avoid accessing Assembly file path when publishing as a single file
# dotnet_diagnostic.IL3001.severity = warning # Avoid accessing Assembly file path when publishing as a single-file
# dotnet_diagnostic.IL3002.severity = warning # Avoid calling members annotated with 'RequiresAssemblyFilesAttribute' when publishing as a single file
# dotnet_diagnostic.IL3003.severity = warning # 'RequiresAssemblyFilesAttribute' annotations must match across all interface implementations or overrides.

# Obsolete features in .NET 5+
dotnet_diagnostic.SYSLIB0001.severity = warning # The UTF-7 encoding is insecure and should not be used. Consider using UTF-8 instead.
dotnet_diagnostic.SYSLIB0002.severity = warning # PrincipalPermissionAttribute is not honored by the runtime and must not be used.
dotnet_diagnostic.SYSLIB0003.severity = warning # Code access security (CAS) is not supported or honored by the runtime.
dotnet_diagnostic.SYSLIB0004.severity = warning # The constrained execution region (CER) feature is not supported.
dotnet_diagnostic.SYSLIB0005.severity = warning # The global assembly cache (GAC) is not supported.
dotnet_diagnostic.SYSLIB0006.severity = warning # Thread.Abort() is not supported and throws PlatformNotSupportedException.
dotnet_diagnostic.SYSLIB0007.severity = warning # The default implementation of this cryptography algorithm is not supported.
dotnet_diagnostic.SYSLIB0008.severity = warning # The CreatePdbGenerator() API is not supported and throws PlatformNotSupportedException.
dotnet_diagnostic.SYSLIB0009.severity = warning # The AuthenticationManager.Authenticate and AuthenticationManager.PreAuthenticate methods are not supported and throw PlatformNotSupportedException.
dotnet_diagnostic.SYSLIB0010.severity = warning # Some remoting APIs are not supported and throw PlatformNotSupportedException.
dotnet_diagnostic.SYSLIB0011.severity = warning # BinaryFormatter serialization is obsolete and should not be used.
dotnet_diagnostic.SYSLIB0012.severity = warning # Assembly.CodeBase and Assembly.EscapedCodeBase are only included for .NET Framework compatibility. Use Assembly.Location instead.
dotnet_diagnostic.SYSLIB0013.severity = warning # Uri.EscapeUriString(String) can corrupt the Uri string in some cases. Consider using Uri.EscapeDataString(String) for query string components instead.
dotnet_diagnostic.SYSLIB0014.severity = warning # WebRequest, HttpWebRequest, ServicePoint, and WebClient are obsolete. Use HttpClient instead.
dotnet_diagnostic.SYSLIB0015.severity = warning # DisablePrivateReflectionAttribute has no effect in .NET 6+.
dotnet_diagnostic.SYSLIB0016.severity = warning # Use the Graphics.GetContextInfo overloads that accept arguments for better performance and fewer allocations.
dotnet_diagnostic.SYSLIB0017.severity = warning # Strong-name signing is not supported and throws PlatformNotSupportedException.
dotnet_diagnostic.SYSLIB0018.severity = warning # Reflection-only loading is not supported and throws PlatformNotSupportedException.
dotnet_diagnostic.SYSLIB0019.severity = warning # The System.Runtime.InteropServices.RuntimeEnvironment members SystemConfigurationFile, GetRuntimeInterfaceAsIntPtr(Guid, Guid), and GetRuntimeInterfaceAsObject(Guid, Guid) are no longer supported and throw PlatformNotSupportedException.
dotnet_diagnostic.SYSLIB0020.severity = warning # JsonSerializerOptions.IgnoreNullValues is obsolete. To ignore null values when serializing, set DefaultIgnoreCondition to JsonIgnoreCondition.WhenWritingNull.
dotnet_diagnostic.SYSLIB0021.severity = warning # Derived cryptographic types are obsolete. Use the Create method on the base type instead.
dotnet_diagnostic.SYSLIB0022.severity = warning # The Rijndael and RijndaelManaged types are obsolete. Use Aes instead.
dotnet_diagnostic.SYSLIB0023.severity = warning # RNGCryptoServiceProvider is obsolete. To generate a random number, use one of the RandomNumberGenerator static methods instead.
dotnet_diagnostic.SYSLIB0024.severity = warning # Creating and unloading AppDomains is not supported and throws an exception.
dotnet_diagnostic.SYSLIB0025.severity = warning # SuppressIldasmAttribute has no effect in .NET 6+.
dotnet_diagnostic.SYSLIB0026.severity = warning # X509Certificate and X509Certificate2 are immutable. Use the appropriate constructor to create a new certificate.
dotnet_diagnostic.SYSLIB0027.severity = warning # PublicKey.Key is obsolete. Use the appropriate method to get the public key, such as GetRSAPublicKey().
dotnet_diagnostic.SYSLIB0028.severity = warning # X509Certificate2.PrivateKey is obsolete. Use the appropriate method to get the private key, such as RSACertificateExtensions.GetRSAPrivateKey(X509Certificate2), or use the X509Certificate2.CopyWithPrivateKey(ECDiffieHellman) method to create a new instance with a private key.
dotnet_diagnostic.SYSLIB0029.severity = warning # ProduceLegacyHmacValues is obsolete. Producing legacy HMAC values is no longer supported.
dotnet_diagnostic.SYSLIB0030.severity = warning # HMACSHA1 always uses the algorithm implementation provided by the platform. Use a constructor without the useManagedSha1 parameter.
dotnet_diagnostic.SYSLIB0031.severity = warning # CryptoConfig.EncodeOID(String) is obsolete. Use the ASN.1 functionality provided in System.Formats.Asn1.
dotnet_diagnostic.SYSLIB0032.severity = warning # Recovery from corrupted process state exceptions is not supported; HandleProcessCorruptedStateExceptionsAttribute is ignored.
dotnet_diagnostic.SYSLIB0033.severity = warning # Rfc2898DeriveBytes.CryptDeriveKey(String, String, Int32, Byte[]) is obsolete and is not supported. Use PasswordDeriveBytes.CryptDeriveKey(String, String, Int32, Byte[]) instead.
dotnet_diagnostic.SYSLIB0034.severity = warning # CmsSigner(CspParameters) is obsolete. Use an alternative constructor instead.
dotnet_diagnostic.SYSLIB0035.severity = warning # SignerInfo.ComputeCounterSignature() is obsolete. Use the overload that accepts a CmsSigner instead.
dotnet_diagnostic.SYSLIB0036.severity = warning # Regex.CompileToAssembly is obsolete and not supported. Use RegexGeneratorAttribute with the regular expression source generator instead.
dotnet_diagnostic.SYSLIB0037.severity = warning # AssemblyName members HashAlgorithm, ProcessorArchitecture, and VersionCompatibility are obsolete and not supported.
dotnet_diagnostic.SYSLIB0038.severity = warning # SerializationFormat.Binary is obsolete and should not be used.
dotnet_diagnostic.SYSLIB0039.severity = warning # TLS versions 1.0 and 1.1 have known vulnerabilities and are not recommended. Use a newer TLS version instead, or use SslProtocols.None to defer to OS defaults.
dotnet_diagnostic.SYSLIB0040.severity = warning # EncryptionPolicy.NoEncryption and EncryptionPolicy.AllowNoEncryption significantly reduce security and should not be used in production code.
dotnet_diagnostic.SYSLIB0041.severity = warning # The default hash algorithm and iteration counts in Rfc2898DeriveBytes constructors are outdated and insecure. Use a constructor that accepts the hash algorithm and the number of iterations.
dotnet_diagnostic.SYSLIB0042.severity = warning # ToXmlString and FromXmlString have no implementation for elliptic curve cryptography (ECC) types, and are obsolete. Use a standard import and export format such as ExportSubjectPublicKeyInfo or ImportSubjectPublicKeyInfo for public keys, and ExportPkcs8PrivateKey or ImportPkcs8PrivateKey for private keys.
dotnet_diagnostic.SYSLIB0043.severity = warning # ECDiffieHellmanPublicKey.ToByteArray() and the associated constructor do not have a consistent and interoperable implementation on all platforms. Use ECDiffieHellmanPublicKey.ExportSubjectPublicKeyInfo() instead.
dotnet_diagnostic.SYSLIB0044.severity = warning # AssemblyName.CodeBase and AssemblyName.EscapedCodeBase are obsolete. Using them for loading an assembly is not supported.
dotnet_diagnostic.SYSLIB0045.severity = warning # Cryptographic factory methods accepting an algorithm name are obsolete. Use the parameterless Create factory method on the algorithm type instead.
dotnet_diagnostic.SYSLIB0046.severity = warning # The ControlledExecution.Run(Action, CancellationToken) method might corrupt the process and should not be used in production code.
dotnet_diagnostic.SYSLIB0047.severity = warning # XmlSecureResolver is obsolete. Use XmlResolver.ThrowingResolver instead when attempting to forbid XML external entity resolution.
dotnet_diagnostic.SYSLIB0048.severity = warning # RSA.EncryptValue(Byte[]) and RSA.DecryptValue(Byte[]) are obsolete. Use RSA.Encrypt and RSA.Decrypt instead.
dotnet_diagnostic.SYSLIB0049.severity = warning # JsonSerializerOptions.AddContext is obsolete. To register a JsonSerializerContext, use either the TypeInfoResolver or TypeInfoResolverChain property.
dotnet_diagnostic.SYSLIB0050.severity = warning # Formatter-based serialization is obsolete and should not be used.
dotnet_diagnostic.SYSLIB0051.severity = warning # APIs that support obsolete formatter-based serialization are obsolete. They should not be called or extended by application code.
dotnet_diagnostic.SYSLIB0052.severity = warning # APIs that support obsolete mechanisms for Regex extensibility are obsolete.
dotnet_diagnostic.SYSLIB0053.severity = warning # AesGcm should indicate the required tag size for encryption and decryption. Use a constructor that accepts the tag size.

# Code analysis in ASP.NET Core apps
dotnet_diagnostic.ASP0000.severity = warning # Do not call 'IServiceCollection.BuildServiceProvider' in 'ConfigureServices'
dotnet_diagnostic.ASP0001.severity = warning # Authorization middleware is incorrectly configured
dotnet_diagnostic.ASP0003.severity = warning # Do not use model binding attributes with route handlers
dotnet_diagnostic.ASP0004.severity = warning # Do not use action results with route handlers
dotnet_diagnostic.ASP0005.severity = warning # Do not place attribute on method called by route handler lambda
dotnet_diagnostic.ASP0006.severity = warning # Do not use non-literal sequence numbers
dotnet_diagnostic.ASP0007.severity = warning # Route parameter and argument optionality is mismatched
dotnet_diagnostic.ASP0008.severity = warning # Do not use ConfigureWebHost with WebApplicationBuilder.Host
dotnet_diagnostic.ASP0009.severity = warning # Do not use Configure with WebApplicationBuilder.WebHost
dotnet_diagnostic.ASP0010.severity = warning # Do not use UseStartup with WebApplicationBuilder.WebHost
dotnet_diagnostic.ASP0011.severity = warning # Suggest using builder.Logging over Host.ConfigureLogging or WebHost.ConfigureLogging
dotnet_diagnostic.ASP0012.severity = warning # Suggest using builder.Services over Host.ConfigureServices or WebHost.ConfigureServices
dotnet_diagnostic.ASP0013.severity = warning # Suggest switching from using Configure methods to WebApplicationBuilder.Configuration
dotnet_diagnostic.ASP0014.severity = warning # Suggest using top level route registrations
dotnet_diagnostic.ASP0015.severity = warning # Suggest using IHeaderDictionary properties
dotnet_diagnostic.ASP0016.severity = warning # Do not return a value from RequestDelegate
dotnet_diagnostic.ASP0017.severity = warning # Invalid route pattern
dotnet_diagnostic.ASP0018.severity = warning # Unused route parameter
dotnet_diagnostic.ASP0019.severity = warning # Suggest using IHeaderDictionary.Append or the indexer
dotnet_diagnostic.ASP0020.severity = warning # Complex types referenced by route parameters must be parsable
dotnet_diagnostic.ASP0021.severity = warning # The return type of the BindAsync method must be ValueTask<T>.
dotnet_diagnostic.ASP0022.severity = warning # Route conflict detected between route handlers
dotnet_diagnostic.ASP0023.severity = warning # Route conflict detected between route handlers
dotnet_diagnostic.ASP0024.severity = warning # Route handler has multiple parameters with the [FromBody] attribute
dotnet_diagnostic.ASP0025.severity = warning # Use AddAuthorizationBuilder to register authorization services and construct policies.
dotnet_diagnostic.BL0001.severity = warning # Component parameter should have public setters
dotnet_diagnostic.BL0002.severity = warning # Component has multiple CaptureUnmatchedValues parameters
dotnet_diagnostic.BL0003.severity = warning # Component parameter with CaptureUnmatchedValues has the wrong type
dotnet_diagnostic.BL0004.severity = warning # Component parameter should be public
dotnet_diagnostic.BL0005.severity = warning # Component parameter should not be set outside of its component
dotnet_diagnostic.BL0006.severity = warning # Do not use RenderTree types
dotnet_diagnostic.MVC1000.severity = warning # Use of IHtmlHelper.Partial should be avoided
dotnet_diagnostic.MVC1001.severity = warning # Filters cannot be applied to page handler methods
dotnet_diagnostic.MVC1002.severity = warning # Route attribute cannot be applied to page handler methods
dotnet_diagnostic.MVC1003.severity = warning # Route attributes cannot be applied to page models
dotnet_diagnostic.MVC1004.severity = warning # Rename model bound parameter
dotnet_diagnostic.MVC1005.severity = warning # Cannot use UseMvc with Endpoint Routing
dotnet_diagnostic.MVC1006.severity = warning # Methods containing TagHelpers must be async and return Task

# Source-generator diagnostics Rules
dotnet_diagnostic.SYSLIB1001.severity = warning # Logging method names cannot start with _
dotnet_diagnostic.SYSLIB1002.severity = warning # Don't include log level parameters as templates in the logging message
dotnet_diagnostic.SYSLIB1003.severity = warning # InvalidLoggingMethodParameterNameTitle
dotnet_diagnostic.SYSLIB1004.severity = warning # Logging class cannot be in nested types.
dotnet_diagnostic.SYSLIB1005.severity = warning # Could not find a required type definition
dotnet_diagnostic.SYSLIB1006.severity = warning # Multiple logging methods cannot use the same event ID within a class
dotnet_diagnostic.SYSLIB1007.severity = warning # Logging methods must return void
dotnet_diagnostic.SYSLIB1008.severity = warning # One of the arguments to a logging method must implement the Microsoft.Extensions.Logging.ILogger interface
dotnet_diagnostic.SYSLIB1009.severity = warning # Logging methods must be static
dotnet_diagnostic.SYSLIB1010.severity = warning # Logging methods must be partial
dotnet_diagnostic.SYSLIB1011.severity = warning # Logging methods cannot be generic
dotnet_diagnostic.SYSLIB1012.severity = warning # Redundant qualifier in logging message
dotnet_diagnostic.SYSLIB1013.severity = warning # Don't include exception parameters as templates in the logging message
dotnet_diagnostic.SYSLIB1014.severity = warning # Logging template has no corresponding method argument
dotnet_diagnostic.SYSLIB1015.severity = warning # Argument is not referenced from the logging message
dotnet_diagnostic.SYSLIB1016.severity = warning # Logging methods cannot have a body
dotnet_diagnostic.SYSLIB1017.severity = warning # A LogLevel value must be supplied in the LoggerMessage attribute or as a parameter to the logging method
dotnet_diagnostic.SYSLIB1018.severity = warning # Don't include logger parameters as templates in the logging message
dotnet_diagnostic.SYSLIB1019.severity = warning # Couldn't find a field of type Microsoft.Extensions.Logging.ILogger
dotnet_diagnostic.SYSLIB1020.severity = warning # Found multiple fields of type Microsoft.Extensions.Logging.ILogger
dotnet_diagnostic.SYSLIB1021.severity = warning # Multiple message-template item names differ only by case
dotnet_diagnostic.SYSLIB1022.severity = warning # Can't have malformed format strings (for example, dangling curly braces)
dotnet_diagnostic.SYSLIB1023.severity = warning # Generating more than six arguments is not supported
dotnet_diagnostic.SYSLIB1024.severity = warning # Logging method argument uses unsupported out parameter modifier
dotnet_diagnostic.SYSLIB1025.severity = warning # Multiple logging methods cannot use the same event name within a class
dotnet_diagnostic.SYSLIB1026.severity = warning # C# language version not supported by the logging source generator.
dotnet_diagnostic.SYSLIB1030.severity = warning # The System.Text.Json source generator did not generate serialization metadata for type
dotnet_diagnostic.SYSLIB1031.severity = warning # The System.Text.Json source generator encountered a duplicate JsonTypeInfo property name
dotnet_diagnostic.SYSLIB1032.severity = warning # The System.Text.Json source generator encountered a context class that is not partial
dotnet_diagnostic.SYSLIB1033.severity = warning # The System.Text.Json source generator encountered a type that has multiple [JsonConstructor] annotations
dotnet_diagnostic.SYSLIB1034.severity = warning # JsonSourceGenerator encountered a JsonStringEnumConverter annotation
dotnet_diagnostic.SYSLIB1035.severity = warning # The System.Text.Json source generator encountered a type that has multiple [JsonExtensionData] annotations
dotnet_diagnostic.SYSLIB1036.severity = warning # The System.Text.Json source generator encountered an invalid [JsonExtensionData] annotation
dotnet_diagnostic.SYSLIB1037.severity = warning # The System.Text.Json source generator encountered a type with init-only properties for which deserialization is not supported
dotnet_diagnostic.SYSLIB1038.severity = warning # The System.Text.Json source generator encountered a property annotated with [JsonInclude] that has inaccessible accessors
dotnet_diagnostic.SYSLIB1039.severity = warning # JsonSourceGenerator encountered a JsonDerivedTypeAttribute annotation with JsonSourceGenerationMode.Serialization enabled
dotnet_diagnostic.SYSLIB1040.severity = warning # Invalid GeneratedRegexAttribute usage.
dotnet_diagnostic.SYSLIB1041.severity = warning # Multiple GeneratedRegexAttribute attributes were applied to the same method, but only one is allowed.
dotnet_diagnostic.SYSLIB1042.severity = warning # The specified regular expression is invalid.
dotnet_diagnostic.SYSLIB1043.severity = warning # A GeneratedRegexAttribute method must be partial, parameterless, non-generic, and non-abstract, and return Regex.
dotnet_diagnostic.SYSLIB1044.severity = warning # The regex generator couldn't generate a complete source implementation for the specified regular expression due to an internal limitation. See the explanation in the generated source for more details.
# dotnet_diagnostic.SYSLIB1045.severity = warning # Use GeneratedRegexAttribute to generate the regular expression implementation at compile time.
dotnet_diagnostic.SYSLIB1050.severity = warning # Invalid LibraryImportAttribute usage.
dotnet_diagnostic.SYSLIB1051.severity = warning # The specified type is not supported by source-generated p/invokes.
dotnet_diagnostic.SYSLIB1052.severity = warning # The specified configuration is not supported by source-generated p/invokes.
dotnet_diagnostic.SYSLIB1053.severity = warning # The specified LibraryImportAttribute arguments cannot be forwarded to DllImportAttribute.
dotnet_diagnostic.SYSLIB1054.severity = warning # Use LibraryImportAttribute instead of DllImportAttribute to generate p/invoke marshalling code at compile time.
dotnet_diagnostic.SYSLIB1055.severity = warning # Invalid CustomMarshallerAttribute usage.
dotnet_diagnostic.SYSLIB1056.severity = warning # The specified native type is invalid.
dotnet_diagnostic.SYSLIB1057.severity = warning # The marshaller type does not have the required shape.
dotnet_diagnostic.SYSLIB1058.severity = warning # Invalid NativeMarshallingAttribute usage.
dotnet_diagnostic.SYSLIB1059.severity = warning # The marshaller type does not support an allocating constructor.
dotnet_diagnostic.SYSLIB1060.severity = warning # The specified marshaller type is invalid.
dotnet_diagnostic.SYSLIB1061.severity = warning # The marshaller type has incompatible method signatures.
dotnet_diagnostic.SYSLIB1062.severity = warning # The project must be updated with <AllowUnsafeBlocks>true</AllowUnsafeBlocks>.
dotnet_diagnostic.SYSLIB1070.severity = warning # Invalid JSImportAttribute usage.
dotnet_diagnostic.SYSLIB1071.severity = warning # Invalid JSExportAttribute usage.
dotnet_diagnostic.SYSLIB1072.severity = warning # The specified type is not supported by source-generated JavaScript interop.
dotnet_diagnostic.SYSLIB1073.severity = warning # The specified configuration is not supported by source-generated JavaScript interop.
dotnet_diagnostic.SYSLIB1074.severity = warning # JSImportAttribute requires unsafe code.
dotnet_diagnostic.SYSLIB1075.severity = warning # JSImportAttribute requires unsafe code.
dotnet_diagnostic.SYSLIB1090.severity = warning # Invalid GeneratedComInterfaceAttribute usage.
dotnet_diagnostic.SYSLIB1091.severity = warning # Method is declared in different partial declaration than the GeneratedComInterface attribute.
dotnet_diagnostic.SYSLIB1092.severity = warning # Usage of LibraryImport or GeneratedComInterface attribute does not follow recommendation.
dotnet_diagnostic.SYSLIB1093.severity = warning # Analysis for COM interface generation has failed.
dotnet_diagnostic.SYSLIB1094.severity = warning # The base COM interface failed to generate source. Code will not be generated for this interface.
dotnet_diagnostic.SYSLIB1095.severity = warning # Invalid GeneratedComClassAttribute usage.
dotnet_diagnostic.SYSLIB1096.severity = warning # Use GeneratedComInterfaceAttribute instead of ComImportAttribute to generate COM marshalling code at compile time.
dotnet_diagnostic.SYSLIB1097.severity = warning # This type implements at least one type with the GeneratedComInterfaceAttribute attribute. Add the GeneratedComClassAttribute to enable passing this type to COM and exposing the COM interfaces for the types with the GeneratedComInterfaceAttribute from objects of this type.
dotnet_diagnostic.SYSLIB1098.severity = warning # .NET COM hosting with EnableComHosting only supports built-in COM interop. It does not support source-generated COM interop with GeneratedComInterfaceAttribute.
dotnet_diagnostic.SYSLIB1099.severity = warning # COM Interop APIs on System.Runtime.InteropServices.Marshal do not support source-generated COM and will fail at run time.
dotnet_diagnostic.SYSLIB1100.severity = warning # Configuration binding generator: Type is not supported.
dotnet_diagnostic.SYSLIB1101.severity = warning # Configuration binding generator: Property on type is not supported.
dotnet_diagnostic.SYSLIB1102.severity = warning # Configuration binding generator: Project's language version must be at least C# 12.
dotnet_diagnostic.SYSLIB1103.severity = warning # Configuration binding generator: Value types are invalid inputs to configuration 'Bind' methods.
dotnet_diagnostic.SYSLIB1104.severity = warning # Configuration binding generator: Generator cannot determine the target configuration type.
dotnet_diagnostic.SYSLIB1201.severity = warning # Can't use ValidateObjectMembersAttribute or ValidateEnumeratedItemsAttribute on fields or properties with open generic types.
dotnet_diagnostic.SYSLIB1202.severity = warning # A member type has no fields or properties to validate.
dotnet_diagnostic.SYSLIB1203.severity = warning # A type has no fields or properties to validate.
dotnet_diagnostic.SYSLIB1204.severity = warning # A type annotated with OptionsValidatorAttribute doesn't implement the necessary interface.
dotnet_diagnostic.SYSLIB1205.severity = warning # A type already includes an implementation of the 'Validate' method.
dotnet_diagnostic.SYSLIB1206.severity = warning # Can't validate private fields or properties.
dotnet_diagnostic.SYSLIB1207.severity = warning # Member type is not enumerable.
dotnet_diagnostic.SYSLIB1208.severity = warning # Validators used for transitive or enumerable validation must have a constructor with no parameters.
dotnet_diagnostic.SYSLIB1209.severity = warning # OptionsValidatorAttribute can't be applied to a static class.
dotnet_diagnostic.SYSLIB1210.severity = warning # Null validator type specified for the ValidateObjectMembersAttribute or ValidateEnumeratedItemsAttribute attributes.
dotnet_diagnostic.SYSLIB1211.severity = warning # Unsupported circular references in model types.
dotnet_diagnostic.SYSLIB1212.severity = warning # Member potentially missing transitive validation.
dotnet_diagnostic.SYSLIB1213.severity = warning # Member potentially missing enumerable validation.
dotnet_diagnostic.SYSLIB1214.severity = warning # Can't validate constants, static fields, or properties.
dotnet_diagnostic.SYSLIB1215.severity = warning # Validation attribute on the member is inaccessible from the validator type.
dotnet_diagnostic.SYSLIB1216.severity = warning # C# language version not supported by the options validation source generator.
dotnet_diagnostic.SYSLIB1217.severity = warning # The validation attribute is only applicable to properties of type string, array, or ICollection; it cannot be used with other types.
dotnet_diagnostic.SYSLIB1220.severity = warning # JsonSourceGenerator encountered a [JsonConverterAttribute] with an invalid type argument.
dotnet_diagnostic.SYSLIB1221.severity = warning # JsonSourceGenerator does not support this C# language version.
dotnet_diagnostic.SYSLIB1222.severity = warning # Constructor annotated with JsonConstructorAttribute is inaccessible.
dotnet_diagnostic.SYSLIB1223.severity = warning # Constructor annotated with JsonConstructorAttribute is inaccessible.
dotnet_diagnostic.SYSLIB1224.severity = warning # Types annotated with JsonSerializableAttribute must be classes deriving from JsonSerializerContext.
